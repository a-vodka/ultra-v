//---------------------------------------------------------------------------

#include <vcl.h>
#include <math.h>
#pragma hdrstop

#include "myThread.h"
#include "FFT.h"

#pragma package(smart_init)
//---------------------------------------------------------------------------

//   Important: Methods and properties of objects in VCL can only be
//   used in a method called using Synchronize, for example:
//
//      Synchronize(UpdateCaption);
//
//   where UpdateCaption could look like:
//
//      void __fastcall MyThread::UpdateCaption()
//      {
//        Form1->Caption = "Updated in a thread";
//      }
//---------------------------------------------------------------------------

__fastcall MyThread::MyThread(bool CreateSuspended)
    : TThread(CreateSuspended)
{

}
//---------------------------------------------------------------------------
void __fastcall MyThread::Execute()
{
    #define N 16000*2
    
    ada.openDevice();
    short int ReadBuf[N];
    DWORD dwBytesRead = sizeof(ReadBuf);

    double dtime = (double)ada.getNumChannels()/(double)ada.getFreq();
    double time = 0.0;

    while ( !Application->Terminated )
    {
        if (Terminated)
            break;
        TDateTime dt1 = Time();
        ada.readData(ReadBuf, dwBytesRead);
//           Sleep(100);
        for (int i=0;i<N;i+=2)
        {

            channels ch;

//            ch.A = 100.0*sin(10.0*time);
//            ch.B = 100.0*cos(10.0*time);

            ch.A = ReadBuf[i];
            ch.B = ReadBuf[i+1];

            ch.t = time;
            time += dtime;

            EnterCriticalSection(&Form1->CS);
            vect.push_back(ch);
            LeaveCriticalSection(&Form1->CS);
        }
        dt = Time() - dt1;
    }

    ada.closeDevice();
}
//---------------------------------------------------------------------------
